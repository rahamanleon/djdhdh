const axios = require("axios");

const baseApiUrl = async () => {
  const base = await axios.get(`https://raw.githubusercontent.com/Blankid018/D1PT0/main/baseApiUrl.json`);
  return base.data.api;
};

module.exports.config = {
  name: "ржмрзЗржмрж┐",
  version: "1.0.0",
  role: 0,
  author: "dipto", //modified by xnil
  description: "better than all Sim simi with multiple conversation",
  guide: { en: "[message]" },
  category: "ChatBots",
  coolDowns: 5,
};

module.exports.onReply = async function ({ api, event }) {
  if (event.type === "message_reply") {
    const reply = event.body.toLowerCase();
    if (isNaN(reply)) {
      try {
        const baseUrl = await baseApiUrl();
        const response = await axios.get(`${baseUrl}/baby?text=${encodeURIComponent(reply)}&font=1`);
        const ok = response.data.reply;
        await api.sendMessage(
          ok,
          event.threadID,
          (error, info) => {
            if (!error) {
              global.GoatBot.onReply.set(info.messageID, {
                commandName: this.config.name,
                type: "reply",
                messageID: info.messageID,
                author: event.senderID,
                link: ok,
              });
            }
          },
          event.messageID,
        );
      } catch (error) {
        console.error(`Failed to get a reply: ${error.message}`);
        api.sendMessage(`Error: ${error.message}`, event.threadID, event.messageID);
      }
    }
  }
};

module.exports.onChat = async function ({ event, api }) {
  const body = event.body && event.body.toLowerCase().trim();
  if (body === "ржмрзЗржмрж┐") {
const msgs = ["ЁЭЧХЁЭЧ▓ЁЭШАЁЭЧ╡ЁЭЧ╢ ЁЭЧ▒ЁЭЧоЁЭЧ╕ЁЭЧ╣ЁЭЧ▓ ЁЭЧоЁЭЧ║ЁЭЧ║ЁЭШВ ЁЭЧпЁЭЧ╝ЁЭЧ╕ЁЭЧо ЁЭЧ▒ЁЭЧ▓ЁЭЧпЁЭЧо ЁЭШБЁЭЧ╝__ЁЯе║",
        "ЁЭЧХЁЭЧпЁЭШЖ ржирж╛ ржЬрж╛ржирзБ, ржмрж▓ ЁЯШМ",
        "ржмрзЗрж╢рж┐ bby Bbby ржХрж░рж▓рзЗ leave ржирж┐ржмрзЛ ржХрж┐ржирзНрждрзБ ЁЯШТЁЯШТ",
        "__ржмрзЗрж╢рж┐ ржмрзЗржмрж┐ ржмрж▓рж▓рзЗ ржХрж╛ржорзБрж░ ржжрж┐ржорзБ ЁЯднЁЯдн",
        "ЁЭЩПЁЭЩкЁЭЩвЁЭЩЦЁЭЩз ЁЭЩЬЁЭЩЫ ЁЭЩгЁЭЩЦЁЭЩЮ, ЁЭЩйЁЭЩЦЁЭЩо ЁЭЩЦЁЭЩвЁЭЩа ЁЭЩЩЁЭЩЦЁЭЩаЁЭЩиЁЭЩд? ЁЯШВЁЯШВЁЯШВ",
        "ЁЭЧХЁЭЧпЁЭШЖ ржирж╛ ржмрж▓рзЗ ЁЭЧХЁЭЧ╝ЁЭШД ржмрж▓рзЛ ЁЯШШ",
        "ржПржЗ ржПржЗ рждрзЛрж░ ржкрж░рзАржХрзНрж╖рж╛ ржХржмрзЗ? рж╢рзБржзрзБ ЁЭЧХЁЭЧпЁЭШЖ ЁЭЧпЁЭЧпЁЭШЖ ржХрж░рж┐рж╕ ЁЯШ╛",
        "рждрзЛрж░рж╛ ржпрзЗ рж╣рж╛рж░рзЗ ЁЭЧХЁЭЧпЁЭШЖ ржбрж╛ржХржЫрж┐рж╕ ржЖржорж┐ рждрзЛ рж╕рждрзНржпрж┐ ржмрж╛ржЪрзНржЪрж╛ рж╣ржпрж╝рзЗ ржпрж╛ржмрзЛ_тШ╣ЁЯШС",
        "ржЖржЬржм рждрзЛ__ЁЯШТ",
        "ржЖржорж╛ржХрзЗ ржбрзЗржХрзЛ ржирж╛,ржЖржорж┐ ржмрзНржпрж╛рж╕рзНржд ржЖрж╕рж┐ЁЯЩЖЁЯП╗тАНтЩАя╕П",
        "ЁЭЧХЁЭЧпЁЭШЖ ржмрж▓рж▓рзЗ ржЪрж╛ржХрж░рж┐ ржерж╛ржХржмрзЗ ржирж╛",
        "ЁЭЧХЁЭЧпЁЭШЖ ЁЭЧХЁЭЧпЁЭШЖ ржирж╛ ржХрж░рзЗ ржЖржорж╛рж░ ржмрж╕ ржорж╛ржирзЗ,,BADBOY ,BADBOY ржУ рждрзЛ ржХрж░рждрзЗ ржкрж╛рж░рзЛЁЯШС?",
        "ржЖржорж╛рж░ рж╕рзЛржирж╛рж░ ржмрж╛ржВрж▓рж╛, рждрж╛рж░ржкрж░рзЗ рж▓рж╛ржЗржи ржХрж┐? ЁЯЩИ",
        "ЁЯН║ ржПржЗ ржирж╛ржУ ржЬрзБрж╕ ржЦрж╛ржУ..!ЁЭЧХЁЭЧпЁЭШЖ ржмрж▓рждрзЗ ржмрж▓рждрзЗ рж╣рж╛ржкрж╛ржпрж╝ ржЧрзЗржЫрзЛ ржирж╛ ЁЯе▓",
        "рж╣ржЯрж╛рзО ржЖржорж╛ржХрзЗ ржоржирзЗ ржкржбрж╝рж▓рзЛ ЁЯЩД",
        "ЁЭЧХЁЭЧпЁЭШЖ ржмрж▓рзЗ ржЕрж╕ржорзНржорж╛ржи ржХрж░ржЪрзНржЫрж┐ржЫ,ЁЯШ░ЁЯШ┐",
        "ржЖржорж┐ рждрзЛржорж╛рж░ рж╕рж┐ржирж┐ржпрж╝рж░ ржЖржкрзБ ржУржХрзЗ ЁЯШ╝рж╕ржорзНржорж╛ржи ржжрзЗржУЁЯЩБ",
        "ржЦрж╛ржУржпрж╝рж╛ ржжрж╛ржУржпрж╝рж╛ ржХрж░рж╕рзЛ ЁЯЩД",
        "ржПржд ржХрж╛ржЫрзЗржУ ржПрж╕рзЛ ржирж╛,ржкрзНрж░рзЗржо ржП ржкрж░рзЗ ржпрж╛ржмрзЛ рждрзЛ ЁЯЩИ",
        "ржЖрж░рзЗ ржЖржорж┐ ржоржЬрж╛ ржХрж░рж╛рж░ mood ржП ржирж╛ржЗЁЯШТ",
        "ЁЭЧЫЁЭЧ▓ЁЭШЖ ЁЭЧЫЁЭЧоЁЭЧ╗ЁЭЧ▒ЁЭШАЁЭЧ╝ЁЭЧ║ЁЭЧ▓ ржмрж▓рзЛ ЁЯШБЁЯШБ",
        "ржЖрж░рзЗ Bolo ржЖржорж╛рж░ ржЬрж╛ржи, ржХрзЗржоржи ржЖрж╕рзЛ? ЁЯШЪ",
        "ржПржХржЯрж╛ BF ржЦрзБржБржЬрзЗ ржжрж╛ржУ ЁЯШ┐",
        "ржлрзНрж░рзЗржирзНржб рж░рж┐ржХрзЛржпрж╝рзЗрж╕рзНржЯ ржжрж┐рж▓рзЗ рзл ржЯрж╛ржХрж╛ ржжрж┐ржмрзЛ ЁЯШЧ",
        "ЁЯРдЁЯРд",
        "рзйрзи рждрж╛рж░рж┐ржЦ ржЖржорж╛рж░ ржмрж┐ржпрж╝рзЗ ЁЯРд",
        "рж╣рж╛ ржмрж▓рзЛЁЯШТ,ржХрж┐ ржХрж░рждрзЗ ржкрж╛рж░рж┐ЁЯШРЁЯШС?",
        "ржмрж▓рзЛ ржлрзБрж▓ржЯрзБрж╢рж┐_ЁЯШШ",
              "amr JaNu lagbe,Tumi ki single aso?",
              "рждрзЛрж░ ржмрж┐ржпрж╝рзЗ рж╣ржпрж╝ ржирж┐ ЁЭЧХЁЭЧпЁЭШЖ рж╣ржЗрж▓рзЛ ржХрж┐ржнрж╛ржмрзЗ,,ЁЯЩД",
              "ржЖржЬ ржПржХржЯрж╛ ржлрзЛржи ржирж╛ржЗ ржмрж▓рзЗ рж░рж┐ржкрзНрж▓рж╛ржЗ ржжрж┐рждрзЗ ржкрж╛рж░рж▓рж╛ржо ржирж╛_ЁЯЩД",
              "ржжрзЗржЦрж╛ рж╣рж▓рзЗ ржХрж╛ржаржЧрзЛрж▓рж╛ржк ржжрж┐ржУ..ЁЯдЧ",
              "рж╢рзБржиржмрзЛ ржирж╛ЁЯШ╝ рждрзБржорж┐ ржЖржорж╛ржХрзЗ ржкрзНрж░рзЗржо ржХрж░рж╛ржЗ ржжрж╛ржУ ржирж┐ЁЯе║ ржкржЪрж╛ рждрзБржорж┐ЁЯе║",
        "ржЖржЧрзЗ ржПржХржЯрж╛ ржЧрж╛ржи ржмрж▓рзЛ, тШ╣ ржирж╛рж╣рж▓рзЗ ржХржерж╛ ржмрж▓ржмрзЛ ржирж╛ ЁЯе║",
        "ржмрж▓рзЛ ржХрж┐ ржХрж░рждрзЗ ржкрж╛рж░рж┐ рждрзЛржорж╛рж░ ржЬржирзНржп ЁЯШЪ",
        "ржХржерж╛ ржжрзЗржУ ржЖржорж╛ржХрзЗ ржкржЯрж╛ржмрж╛...!! ЁЯШМ",
        "ржмрж╛рж░ ржмрж╛рж░ Disturb ржХрж░рзЗржЫрж┐рж╕ ржХрзЛржирзЛ ЁЯШ╛, ржЖржорж╛рж░ ржЬрж╛ржирзБ ржПрж░ рж╕рж╛ржерзЗ ржмрзНржпрж╛рж╕рзНржд ржЖрж╕рж┐ ЁЯШЛ",
        "ржЖржорж╛ржХрзЗ ржирж╛ ржжрзЗржХрзЗ ржПржХржЯрзБ ржкржбрж╝рждрзЗ ржмрж╕рждрзЗржУ рждрзЛ ржкрж╛рж░рзЛ ЁЯе║ЁЯе║",
        "ржмрж╛рж░ ржмрж╛рж░ ржбрж╛ржХрж▓рзЗ ржорж╛ржерж╛ ржЧрж░ржо рж╣ржпрж╝ ржХрж┐ржирзНрждрзБ ЁЯШСЁЯШТ",
        "ржУржЗ рждрзБржорж┐ single ржирж╛?ЁЯл╡ЁЯди ЁЯШСЁЯШТ",
        "ржмрж▓рзЛ ржЬрж╛ржирзБ ЁЯШТ",
        "MeowЁЯРд",     
       "рждрзЛрж░ ржХржерж╛ рждрзЛрж░ ржмрж╛ржбрж╝рж┐ ржХрзЗржЙ рж╢рзБржирзЗ ржирж╛ ,рждрзЛ ржЖржорж┐ ржХрзЛржирзЛ рж╢рзБржиржмрзЛ ?ЁЯдФЁЯШВ",
        "ржЖржорж┐ рждрзЛ ржЕржирзНржз ржХрж┐ржЫрзБ ржжрзЗржЦрж┐ ржирж╛ЁЯР╕ ЁЯШО",
              "ржЖрж░ ржХржд ржмрж╛рж░ ржбрж╛ржХржмрж╛ ,рж╢рзБржиржЫрж┐ рждрзЛ ЁЯд╖ЁЯП╗тАНтЩАя╕П",
        "ржХрж┐ рж╣рж▓рзЛ, ржорж┐рж╕ ржЯрж┐рж╕ ржХрж░ржЪрзНржЫрзЛ ржирж╛ржХрж┐ ЁЯдг",
        "Bolo Babu, рждрзБржорж┐ ржХрж┐ ржЖржорж╛ржХрзЗ ржнрж╛рж▓рзЛржмрж╛рж╕рзЛ? ЁЯЩИ",
        "ржЖржЬржХрзЗ ржЖржорж╛рж░ mржи ржнрж╛рж▓рзЛ ржирзЗржЗ ЁЯЩЙ"];
const rMsg = msgs[Math.floor(Math.random() * msgs.length)];

api.sendMessage(rMsg, event.threadID, (error, info) => {
            if (!error) {
              global.GoatBot.onReply.set(info.messageID, {
                commandName: this.config.name,
                type: "reply",
                messageID: info.messageID,
                author: event.senderID,
                link: rMsg,
              });
            }
          }, event.messageID);
  } else if (body.startsWith("ржмрзЗржмрж┐ ")) {
    const query = body.slice(4).trim();
    if (query) {
      try {
        const baseUrl = await baseApiUrl();
        const response = await axios.get(`${baseUrl}/baby?text=${encodeURIComponent(query)}&font=1`);
        const reply = response.data.reply;
        await api.sendMessage(
          { body: reply },
          event.threadID,
          (error, info) => {
            if (!error) {
              global.GoatBot.onReply.set(info.messageID, {
                commandName: this.config.name,
                type: "reply",
                messageID: info.messageID,
                author: event.senderID,
                link: reply,
              });
            }
          },
          event.messageID,
        );
      } catch (error) {
        console.error(`Failed to get an answer: ${error.message}`);
        api.sendMessage(`Error: ${error.message}.\nAn error occurred.`, event.threadID, event.messageID);
      }
    }
  }
};

module.exports.onStart = async function ({ api, args, event }) {
  try {
    const query = args.join(" ").toLowerCase();
    if (!query) {
const msgs = ["ЁЭЧХЁЭЧ▓ЁЭШАЁЭЧ╡ЁЭЧ╢ ЁЭЧ▒ЁЭЧоЁЭЧ╕ЁЭЧ╣ЁЭЧ▓ ЁЭЧоЁЭЧ║ЁЭЧ║ЁЭШВ ЁЭЧпЁЭЧ╝ЁЭЧ╕ЁЭЧо ЁЭЧ▒ЁЭЧ▓ЁЭЧпЁЭЧо ЁЭШБЁЭЧ╝__ЁЯе║",
        "ЁЭЧХЁЭЧпЁЭШЖ ржирж╛ ржЬрж╛ржирзБ, ржмрж▓ ЁЯШМ",
        "ржмрзЗрж╢рж┐ bby Bbby ржХрж░рж▓рзЗ leave ржирж┐ржмрзЛ ржХрж┐ржирзНрждрзБ ЁЯШТЁЯШТ",
        "__ржмрзЗрж╢рж┐ ржмрзЗржмрж┐ ржмрж▓рж▓рзЗ ржХрж╛ржорзБрж░ ржжрж┐ржорзБ ЁЯднЁЯдн",
        "ЁЭЩПЁЭЩкЁЭЩвЁЭЩЦЁЭЩз ЁЭЩЬЁЭЩЫ ЁЭЩгЁЭЩЦЁЭЩЮ, ЁЭЩйЁЭЩЦЁЭЩо ЁЭЩЦЁЭЩвЁЭЩа ЁЭЩЩЁЭЩЦЁЭЩаЁЭЩиЁЭЩд? ЁЯШВЁЯШВЁЯШВ",
        "ЁЭЧХЁЭЧпЁЭШЖ ржирж╛ ржмрж▓рзЗ ЁЭЧХЁЭЧ╝ЁЭШД ржмрж▓рзЛ ЁЯШШ",
        "ржПржЗ ржПржЗ рждрзЛрж░ ржкрж░рзАржХрзНрж╖рж╛ ржХржмрзЗ? рж╢рзБржзрзБ ЁЭЧХЁЭЧпЁЭШЖ ЁЭЧпЁЭЧпЁЭШЖ ржХрж░рж┐рж╕ ЁЯШ╛",
        "рждрзЛрж░рж╛ ржпрзЗ рж╣рж╛рж░рзЗ ЁЭЧХЁЭЧпЁЭШЖ ржбрж╛ржХржЫрж┐рж╕ ржЖржорж┐ рждрзЛ рж╕рждрзНржпрж┐ ржмрж╛ржЪрзНржЪрж╛ рж╣ржпрж╝рзЗ ржпрж╛ржмрзЛ_тШ╣ЁЯШС",
        "ржЖржорж╛рж░ рж╕рзЛржирж╛рж░ ржмрж╛ржВрж▓рж╛, рждрж╛рж░ржкрж░рзЗ рж▓рж╛ржЗржи ржХрж┐? ЁЯЩИ",
        "ЁЯН║ ржПржЗ ржирж╛ржУ ржЬрзБрж╕ ржЦрж╛ржУ..!ЁЭЧХЁЭЧпЁЭШЖ ржмрж▓рждрзЗ ржмрж▓рждрзЗ рж╣рж╛ржкрж╛ржпрж╝ ржЧрзЗржЫрзЛ ржирж╛ ЁЯе▓",
        "рж╣ржЯрж╛рзО ржЖржорж╛ржХрзЗ ржоржирзЗ ржкржбрж╝рж▓рзЛ ЁЯЩД",
        "ЁЭЧЫЁЭЧ▓ЁЭШЖ ЁЭЧЫЁЭЧоЁЭЧ╗ЁЭЧ▒ЁЭШАЁЭЧ╝ЁЭЧ║ЁЭЧ▓ ржмрж▓рзЛ ЁЯШБЁЯШБ",
        "ржЖрж░рзЗ Bolo ржЖржорж╛рж░ ржЬрж╛ржи, ржХрзЗржоржи ржЖрж╕рзЛ? ЁЯШЪ",
        "ржПржХржЯрж╛ ЁЭСйЁЭСн ржЦрзБржБржЬрзЗ ржжрж╛ржУ ЁЯШ┐",
        "ржлрзНрж░рзЗржирзНржб рж░рж┐ржХрзЛржпрж╝рзЗрж╕рзНржЯ ржжрж┐рж▓рзЗ рзл ржЯрж╛ржХрж╛ ржжрж┐ржмрзЛ ЁЯШЧ",
        "рзйрзи рждрж╛рж░рж┐ржЦ ржЖржорж╛рж░ ржмрж┐ржпрж╝рзЗ ЁЯРд",
        "ржЖржЧрзЗ ржПржХржЯрж╛ ржЧрж╛ржи ржмрж▓рзЛ, тШ╣ ржирж╛рж╣рж▓рзЗ ржХржерж╛ ржмрж▓ржмрзЛ ржирж╛ ЁЯе║",
        "ржмрж▓рзЛ ржХрж┐ ржХрж░рждрзЗ ржкрж╛рж░рж┐ рждрзЛржорж╛рж░ ржЬржирзНржп ЁЯШЪ",
        "┬░ржХржерж╛ ржжрзЗржУ ржЖржорж╛ржХрзЗ ржкржЯрж╛ржмрж╛...!! ЁЯШМ",
        "ржмрж╛рж░ ржмрж╛рж░ Disturb ржХрж░рзЗржЫрж┐рж╕ ржХрзЛржирзЛ ЁЯШ╛, ржЖржорж╛рж░ ржЬрж╛ржирзБ ржПрж░ рж╕рж╛ржерзЗ ржмрзНржпрж╛рж╕рзНржд ржЖрж╕рж┐ ЁЯШЛ",
        "ржЖржорж╛ржХрзЗ ржирж╛ ржжрзЗржХрзЗ ржПржХржЯрзБ ржкржбрж╝рждрзЗржУ ржмрж╕рждрзЗ рждрзЛ ржкрж╛рж░рзЛ ЁЯе║ЁЯе║",
        "ржмрж╛рж░ ржмрж╛рж░ ржбрж╛ржХрж▓рзЗ ржорж╛ржерж╛ ржЧрж░ржо рж╣ржпрж╝ ржХрж┐ржирзНрждрзБ ЁЯШСЁЯШТ",
        "ржУржЗ рждрзБржорж┐ single ржирж╛?ЁЯл╡ЁЯди ЁЯШСЁЯШТ",
        "ржмрж▓рзЛ ржЬрж╛ржирзБ ЁЯМЪ",
        "ржХрж┐ рж╣рж▓рзЛ, ржорж┐рж╕ ржЯрж┐рж╕ ржХрж░ржЪрзНржЫрж┐рж╕ ржирж╛ржХрж┐ ЁЯдг",
        "Bolo Babu, рждрзБржорж┐ ржХрж┐ ржЖржорж╛ржХрзЗ ржнрж╛рж▓рзЛржмрж╛рж╕рзЛ? ЁЯЩИ",
        "ржЖржЬржХрзЗ ржЖржорж╛рж░ ржоржи ржнрж╛рж▓рзЛ ржирзЗржЗ ЁЯЩЙ"];
const rMsg = msgs[Math.floor(Math.random() * msgs.length)];

api.sendMessage(rMsg, event.threadID, event.messageID);
    }
    const baseUrl = await baseApiUrl();
    const response = await axios.get(`${baseUrl}/baby?text=${encodeURIComponent(query)}`);
    const reply = response.data.reply;
    await api.sendMessage(
      { body: reply },
      event.threadID,
      (error, info) => {
        if (!error) {
          global.GoatBot.onReply.set(info.messageID, {
            commandName: this.config.name,
            type: "reply",
            messageID: info.messageID,
            author: event.senderID,
            link: reply,
          });
        }
      },
      event.messageID,
    );
  } catch (error) {
    console.error(`Failed to get an answer: ${error.message}`);
    api.sendMessage(`${error.message}.\nAn error occurred.`, event.threadID, event.messageID);
  }
};
